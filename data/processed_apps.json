[
  {
    "problem_id": "test_001",
    "question": "Write a function that takes two integers a and b and returns their sum.\n\nFunction signature: def add_numbers(a: int, b: int) -> int:\n\nExample:\n- add_numbers(2, 3) should return 5\n- add_numbers(-1, 1) should return 0\n",
    "solutions": [
      "def add_numbers(a: int, b: int) -> int:\n    return a + b"
    ],
    "starter_code": "def add_numbers(a: int, b: int) -> int:\n    # Your code here\n    pass",
    "input_output": {
      "inputs": [
        [
          "2",
          "3"
        ],
        [
          "-1",
          "1"
        ],
        [
          "0",
          "0"
        ],
        [
          "100",
          "-50"
        ],
        [
          "-10",
          "-20"
        ]
      ],
      "outputs": [
        "5",
        "0",
        "0",
        "50",
        "-30"
      ]
    },
    "difficulty": "introductory",
    "url": "synthetic://test_001",
    "source": "synthetic",
    "test_case_count": 5
  },
  {
    "problem_id": "test_002",
    "question": "Write a function that takes a string and returns its reverse.\n\nFunction signature: def reverse_string(s: str) -> str:\n\nExample:\n- reverse_string(\"hello\") should return \"olleh\"\n- reverse_string(\"\") should return \"\"\n",
    "solutions": [
      "def reverse_string(s: str) -> str:\n    return s[::-1]"
    ],
    "starter_code": "def reverse_string(s: str) -> str:\n    # Your code here\n    pass",
    "input_output": {
      "inputs": [
        [
          "hello"
        ],
        [
          ""
        ],
        [
          "a"
        ],
        [
          "abc def"
        ],
        [
          "12345"
        ]
      ],
      "outputs": [
        "olleh",
        "",
        "a",
        "fed cba",
        "54321"
      ]
    },
    "difficulty": "introductory",
    "url": "synthetic://test_002",
    "source": "synthetic",
    "test_case_count": 5
  },
  {
    "problem_id": "test_003",
    "question": "Write a function that finds the maximum element in a list of integers.\n\nFunction signature: def find_max(numbers: List[int]) -> int:\n\nExample:\n- find_max([1, 3, 2]) should return 3\n- find_max([-1, -5, -2]) should return -1\n",
    "solutions": [
      "def find_max(numbers: List[int]) -> int:\n    return max(numbers)"
    ],
    "starter_code": "def find_max(numbers: List[int]) -> int:\n    # Your code here\n    pass",
    "input_output": {
      "inputs": [
        [
          "[1, 3, 2]"
        ],
        [
          "[-1, -5, -2]"
        ],
        [
          "[42]"
        ],
        [
          "[0, 0, 0]"
        ],
        [
          "[100, 99, 101, 50]"
        ]
      ],
      "outputs": [
        "3",
        "-1",
        "42",
        "0",
        "101"
      ]
    },
    "difficulty": "interview",
    "url": "synthetic://test_003",
    "source": "synthetic",
    "test_case_count": 5
  },
  {
    "problem_id": "test_004",
    "question": "Write a function that takes two integers a and b and returns their sum.\n\nFunction signature: def add_numbers(a: int, b: int) -> int:\n\nExample:\n- add_numbers(2, 3) should return 5\n- add_numbers(-1, 1) should return 0\n",
    "solutions": [
      "def add_numbers(a: int, b: int) -> int:\n    return a + b"
    ],
    "starter_code": "def add_numbers(a: int, b: int) -> int:\n    # Your code here\n    pass",
    "input_output": {
      "inputs": [
        [
          "2",
          "3"
        ],
        [
          "-1",
          "1"
        ],
        [
          "0",
          "0"
        ],
        [
          "100",
          "-50"
        ],
        [
          "-10",
          "-20"
        ]
      ],
      "outputs": [
        "5",
        "0",
        "0",
        "50",
        "-30"
      ]
    },
    "difficulty": "introductory",
    "url": "synthetic://test_004",
    "source": "synthetic",
    "test_case_count": 5
  },
  {
    "problem_id": "test_005",
    "question": "Write a function that takes a string and returns its reverse.\n\nFunction signature: def reverse_string(s: str) -> str:\n\nExample:\n- reverse_string(\"hello\") should return \"olleh\"\n- reverse_string(\"\") should return \"\"\n",
    "solutions": [
      "def reverse_string(s: str) -> str:\n    return s[::-1]"
    ],
    "starter_code": "def reverse_string(s: str) -> str:\n    # Your code here\n    pass",
    "input_output": {
      "inputs": [
        [
          "hello"
        ],
        [
          ""
        ],
        [
          "a"
        ],
        [
          "abc def"
        ],
        [
          "12345"
        ]
      ],
      "outputs": [
        "olleh",
        "",
        "a",
        "fed cba",
        "54321"
      ]
    },
    "difficulty": "introductory",
    "url": "synthetic://test_005",
    "source": "synthetic",
    "test_case_count": 5
  }
]